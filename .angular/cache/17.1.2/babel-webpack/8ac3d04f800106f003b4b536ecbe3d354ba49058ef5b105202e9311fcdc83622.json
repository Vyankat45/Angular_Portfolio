{"ast":null,"code":"import { inject } from '@angular/core';\nimport { ProjectService } from '@pages/project/project.service';\nimport { MetaService } from '@core/services/meta.service';\nimport profileData from '@data/profile.data';\nimport { FeatureProject } from '@pages/project/components/feature-project';\nimport { OtherProject } from '@pages/project/components/other-project';\nimport * as i0 from \"@angular/core\";\nexport class ProjectPage {\n  constructor() {\n    this.projectService = inject(ProjectService);\n    this.metaService = inject(MetaService);\n    this.metaService.setMetaTags(`Projects - ${profileData.name}`, `Projects made by ${profileData.name}. Get to know all the sources.`, ['tech', 'software', 'development', 'project', 'portfolio', 'app', 'programming', 'open-source', 'web', 'android', 'ios']);\n  }\n  static #_ = this.ɵfac = function ProjectPage_Factory(t) {\n    return new (t || ProjectPage)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectPage,\n    selectors: [[\"project-page\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"text-brand-primary\", \"mt-2\", \"text-center\", \"text-3xl\", \"font-semibold\", \"tracking-tight\", \"lg:text-4xl\", \"lg:leading-snug\", \"dark:text-white\"]],\n    template: function ProjectPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \" Projects \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"feature-project\")(3, \"other-project\");\n      }\n    },\n    dependencies: [FeatureProject, OtherProject],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["inject","ProjectService","MetaService","profileData","FeatureProject","OtherProject","ProjectPage","constructor","projectService","metaService","setMetaTags","name","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","ProjectPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","encapsulation"],"sources":["C:\\Users\\Vyankat\\Downloads\\kevinflor.es-master\\kevinflor.es-master\\src\\app\\pages\\project\\project.page.ts"],"sourcesContent":["import { Component, ViewEncapsulation, inject } from '@angular/core';\nimport { ProjectService } from '@pages/project/project.service';\nimport { MetaService } from '@core/services/meta.service';\nimport profileData from '@data/profile.data';\nimport { PlatformTag } from '@shared/components/platform-tag/platform-tag';\nimport { Devicon } from '@shared/components/devicon/devicon';\nimport { ProjectLink } from '@pages/project/components/project-link'\nimport { FeatureProject } from '@pages/project/components/feature-project'\nimport { OtherProject } from '@pages/project/components/other-project'\n@Component({\n  selector: 'project-page',\n  imports: [PlatformTag, Devicon, ProjectLink, FeatureProject, OtherProject],\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  template: `\n    <h1\n      class=\"text-brand-primary mt-2 text-center text-3xl font-semibold tracking-tight lg:text-4xl lg:leading-snug dark:text-white\">\n      Projects\n    </h1>\n    <feature-project/>\n    <!-- <h1\n      class=\"text-brand-primary text-center text-3xl font-semibold tracking-tight lg:text-2xl lg:leading-snug dark:text-white\">\n      Other Hobby Projects\n    </h1> -->\n    <other-project/>\n`\n})\nexport class ProjectPage {\n  projectService = inject(ProjectService);\n  metaService = inject(MetaService);\n  constructor() {\n    this.metaService.setMetaTags(\n      `Projects - ${profileData.name}`,\n      `Projects made by ${profileData.name}. Get to know all the sources.`,\n      [\n        'tech',\n        'software',\n        'development',\n        'project',\n        'portfolio',\n        'app',\n        'programming',\n        'open-source',\n        'web',\n        'android',\n        'ios'\n      ]\n    )\n  }\n}\n"],"mappings":"AAAA,SAAuCA,MAAM,QAAQ,eAAe;AACpE,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAASC,WAAW,QAAQ,6BAA6B;AACzD,OAAOC,WAAW,MAAM,oBAAoB;AAI5C,SAASC,cAAc,QAAQ,2CAA2C;AAC1E,SAASC,YAAY,QAAQ,yCAAyC;;AAmBtE,OAAM,MAAOC,WAAW;EAGtBC,YAAA;IAFA,KAAAC,cAAc,GAAGR,MAAM,CAACC,cAAc,CAAC;IACvC,KAAAQ,WAAW,GAAGT,MAAM,CAACE,WAAW,CAAC;IAE/B,IAAI,CAACO,WAAW,CAACC,WAAW,CAC1B,cAAcP,WAAW,CAACQ,IAAI,EAAE,EAChC,oBAAoBR,WAAW,CAACQ,IAAI,gCAAgC,EACpE,CACE,MAAM,EACN,UAAU,EACV,aAAa,EACb,SAAS,EACT,WAAW,EACX,KAAK,EACL,aAAa,EACb,aAAa,EACb,KAAK,EACL,SAAS,EACT,KAAK,CACN,CACF;EACH;EAAC,QAAAC,CAAA,G;qBArBUN,WAAW;EAAA;EAAA,QAAAO,EAAA,G;UAAXP,WAAW;IAAAQ,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,qBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAZpBP,EAAA,CAAAS,cAAA,YACgI;QAC9HT,EAAA,CAAAU,MAAA,iBACF;QAAAV,EAAA,CAAAW,YAAA,EAAK;QACLX,EAAA,CAAAY,SAAA,sBAAkB;;;mBARyBzB,cAAc,EAAEC,YAAY;IAAAyB,aAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}