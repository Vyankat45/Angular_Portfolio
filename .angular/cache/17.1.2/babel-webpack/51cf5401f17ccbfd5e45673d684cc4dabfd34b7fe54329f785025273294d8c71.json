{"ast":null,"code":"import { computed, signal } from '@angular/core';\nimport { environment } from '@env/environment';\nimport * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {\n    this.color = signal(this.getInitialColor());\n    this.openColor = signal(false);\n    this.getColor = computed(() => this.color());\n  }\n  setThemeColor(color) {\n    this.color.set(color);\n    this.saveColor(color);\n  }\n  toggle() {\n    this.openColor.set(!this.openColor());\n  }\n  saveColor(color) {\n    localStorage.color = color;\n  }\n  getInitialColor() {\n    if (typeof window !== 'undefined') {\n      const storedColor = localStorage.getItem('color');\n      if (storedColor) {\n        return storedColor;\n      }\n    }\n    return environment.mainColor;\n  }\n  static #_ = this.ɵfac = function ThemeService_Factory(t) {\n    return new (t || ThemeService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThemeService,\n    factory: ThemeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["computed","signal","environment","ThemeService","constructor","color","getInitialColor","openColor","getColor","setThemeColor","set","saveColor","toggle","localStorage","window","storedColor","getItem","mainColor","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Vyankat\\Downloads\\kevinflor.es-master\\Vyankat Rathod Portfolio\\src\\app\\core\\services\\theme.service.ts"],"sourcesContent":["import { Injectable, Signal, computed, signal } from '@angular/core';\nimport { environment } from '@env/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  public color = signal<string>(this.getInitialColor());\n  public openColor = signal<boolean>(false)\n  public getColor: Signal<string> = computed(() => this.color());\n  setThemeColor(color: string){\n    this.color.set(color);\n    this.saveColor(color);\n  }\n  toggle(){\n    this.openColor.set(!this.openColor());\n  }\n  private saveColor(color: string){\n    (localStorage as any).color = color;\n  }\n  private getInitialColor(): string {\n    if (typeof window !== 'undefined') {\n      const storedColor = localStorage.getItem('color');\n      if(storedColor){\n        return storedColor;\n      }\n    }\n    return environment.mainColor\n}\n\n}\n"],"mappings":"AAAA,SAA6BA,QAAQ,EAAEC,MAAM,QAAQ,eAAe;AACpE,SAASC,WAAW,QAAQ,kBAAkB;;AAI9C,OAAM,MAAOC,YAAY;EAHzBC,YAAA;IAIS,KAAAC,KAAK,GAAGJ,MAAM,CAAS,IAAI,CAACK,eAAe,EAAE,CAAC;IAC9C,KAAAC,SAAS,GAAGN,MAAM,CAAU,KAAK,CAAC;IAClC,KAAAO,QAAQ,GAAmBR,QAAQ,CAAC,MAAM,IAAI,CAACK,KAAK,EAAE,CAAC;;EAC9DI,aAAaA,CAACJ,KAAa;IACzB,IAAI,CAACA,KAAK,CAACK,GAAG,CAACL,KAAK,CAAC;IACrB,IAAI,CAACM,SAAS,CAACN,KAAK,CAAC;EACvB;EACAO,MAAMA,CAAA;IACJ,IAAI,CAACL,SAAS,CAACG,GAAG,CAAC,CAAC,IAAI,CAACH,SAAS,EAAE,CAAC;EACvC;EACQI,SAASA,CAACN,KAAa;IAC5BQ,YAAoB,CAACR,KAAK,GAAGA,KAAK;EACrC;EACQC,eAAeA,CAAA;IACrB,IAAI,OAAOQ,MAAM,KAAK,WAAW,EAAE;MACjC,MAAMC,WAAW,GAAGF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;MACjD,IAAGD,WAAW,EAAC;QACb,OAAOA,WAAW;;;IAGtB,OAAOb,WAAW,CAACe,SAAS;EAChC;EAAC,QAAAC,CAAA,G;qBAtBYf,YAAY;EAAA;EAAA,QAAAgB,EAAA,G;WAAZhB,YAAY;IAAAiB,OAAA,EAAZjB,YAAY,CAAAkB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}