{"ast":null,"code":"import { computed, inject, input, signal } from '@angular/core';\nimport { devIcon } from '@shared/components/devicon/devicon.data';\nimport { PlatformCheckService } from '@core/services/platform-check.service';\nimport { DarkModeService } from '@core/services/dark-mode.service';\nimport { TooltipDirective } from '@shared/components/tooltip/tooltip.directive';\nimport * as i0 from \"@angular/core\";\nconst _forTrack0 = ($index, $item) => $item.id;\nfunction Devicon_Conditional_1_For_2_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r13 = ctx.$implicit;\n    i0.ɵɵattribute(\"offset\", stop_r13.offset)(\"stop-color\", stop_r13.stopColor)(\"stop-opacity\", stop_r13.stopOpacity);\n  }\n}\nfunction Devicon_Conditional_1_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"linearGradient\");\n    i0.ɵɵrepeaterCreate(1, Devicon_Conditional_1_For_2_For_2_Template, 1, 3, \":svg:stop\", null, i0.ɵɵrepeaterTrackByIndex);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lgData_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"id\", lgData_r7.id)(\"x1\", lgData_r7.x1)(\"y1\", lgData_r7.y1)(\"x2\", lgData_r7.x2)(\"y2\", lgData_r7.y1)(\"gradientUnits\", lgData_r7.gradientUnits);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(lgData_r7.stop);\n  }\n}\nfunction Devicon_Conditional_1_For_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"ellipse\");\n  }\n  if (rf & 2) {\n    const ellipseData_r18 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"cx\", ellipseData_r18.cx)(\"cy\", ellipseData_r18.cy)(\"rx\", ellipseData_r18.rx)(\"ry\", ellipseData_r18.ry)(\"fill\", ctx_r3.elementColor(ellipseData_r18));\n  }\n}\nfunction Devicon_Conditional_1_For_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"polygon\");\n  }\n  if (rf & 2) {\n    const polygonData_r23 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"points\", polygonData_r23.points)(\"fill\", ctx_r4.elementColor(polygonData_r23));\n  }\n}\nfunction Devicon_Conditional_1_For_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\");\n  }\n  if (rf & 2) {\n    const circleData_r28 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"cx\", circleData_r28.cx)(\"cy\", circleData_r28.cy)(\"r\", circleData_r28.r)(\"fill\", ctx_r5.elementColor(circleData_r28));\n  }\n}\nfunction Devicon_Conditional_1_For_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 2);\n  }\n  if (rf & 2) {\n    const pathData_r33 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"d\", pathData_r33.data)(\"fill\", ctx_r6.elementColor(pathData_r33));\n  }\n}\nfunction Devicon_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\");\n    i0.ɵɵrepeaterCreate(1, Devicon_Conditional_1_For_2_Template, 3, 6, \":svg:linearGradient\", null, _forTrack0);\n    i0.ɵɵrepeaterCreate(3, Devicon_Conditional_1_For_4_Template, 1, 5, \":svg:ellipse\", null, i0.ɵɵrepeaterTrackByIndex);\n    i0.ɵɵrepeaterCreate(5, Devicon_Conditional_1_For_6_Template, 1, 2, \":svg:polygon\", null, i0.ɵɵrepeaterTrackByIndex);\n    i0.ɵɵrepeaterCreate(7, Devicon_Conditional_1_For_8_Template, 1, 4, \":svg:circle\", null, i0.ɵɵrepeaterTrackByIndex);\n    i0.ɵɵrepeaterCreate(9, Devicon_Conditional_1_For_10_Template, 1, 2, \":svg:path\", 2, i0.ɵɵrepeaterTrackByIndex);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.cssClass());\n    i0.ɵɵattribute(\"viewBox\", ctx.viewBox);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(ctx.linearGradient);\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(ctx.ellipse);\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(ctx.polygon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(ctx.circle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(ctx.path);\n  }\n}\nexport class Devicon {\n  constructor() {\n    this.name = input('HTML');\n    this.key = input();\n    this.cssClass = input('w-8');\n    this.colored = input(false);\n    this.icon = computed(() => devIcon[this.name()]);\n    this.isHovered = signal(false);\n    this.platformCheck = inject(PlatformCheckService);\n    this.darkModeService = inject(DarkModeService);\n  }\n  elementColor(data) {\n    return this.colored() ? data.fill : this.fillColor(data);\n  }\n  fillColor(data) {\n    return this.isHovered() ? data.fill : this.darkLight(data);\n  }\n  darkLight(data) {\n    return this.darkModeService.isDark() ? data.dark : data.light;\n  }\n  static #_ = this.ɵfac = function Devicon_Factory(t) {\n    return new (t || Devicon)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Devicon,\n    selectors: [[\"devicon\"]],\n    inputs: {\n      name: [i0.ɵɵInputFlags.SignalBased, \"name\"],\n      key: [i0.ɵɵInputFlags.SignalBased, \"key\"],\n      cssClass: [i0.ɵɵInputFlags.SignalBased, \"cssClass\"],\n      colored: [i0.ɵɵInputFlags.SignalBased, \"colored\"]\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[1, \"bg-transparent\", \"dark:text-white\", \"text-gray-600\", \"rounded-full\", \"inline-flex\", \"items-center\", \"transition\", \"ease-in-out\", \"delay-0\", \"hover:scale-[1.1]\", 3, \"tooltip\", \"mouseenter\", \"mouseleave\"], [3, \"class\"], [\"fill-rule\", \"evenodd\"]],\n    template: function Devicon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mouseenter\", function Devicon_Template_div_mouseenter_0_listener() {\n          return ctx.isHovered.set(true);\n        })(\"mouseleave\", function Devicon_Template_div_mouseleave_0_listener() {\n          return ctx.isHovered.set(false);\n        });\n        i0.ɵɵtemplate(1, Devicon_Conditional_1_Template, 11, 3, \":svg:svg\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        let Devicon_contFlowTmp;\n        i0.ɵɵproperty(\"tooltip\", ctx.name());\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(1, (Devicon_contFlowTmp = ctx.icon()) ? 1 : -1, Devicon_contFlowTmp);\n      }\n    },\n    dependencies: [TooltipDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}","map":{"version":3,"names":["computed","inject","input","signal","devIcon","PlatformCheckService","DarkModeService","TooltipDirective","i0","ɵɵelement","ɵɵattribute","stop_r13","offset","stopColor","stopOpacity","ɵɵelementStart","ɵɵrepeaterCreate","Devicon_Conditional_1_For_2_For_2_Template","ɵɵrepeaterTrackByIndex","ɵɵelementEnd","lgData_r7","id","x1","y1","x2","gradientUnits","ɵɵadvance","ɵɵrepeater","stop","ellipseData_r18","cx","cy","rx","ry","ctx_r3","elementColor","polygonData_r23","points","ctx_r4","circleData_r28","r","ctx_r5","pathData_r33","data","ctx_r6","ɵɵnamespaceSVG","Devicon_Conditional_1_For_2_Template","_forTrack0","Devicon_Conditional_1_For_4_Template","Devicon_Conditional_1_For_6_Template","Devicon_Conditional_1_For_8_Template","Devicon_Conditional_1_For_10_Template","ɵɵclassMap","ctx_r0","cssClass","ctx","viewBox","linearGradient","ellipse","polygon","circle","path","Devicon","constructor","name","key","colored","icon","isHovered","platformCheck","darkModeService","fill","fillColor","darkLight","isDark","dark","light","_","_2","selectors","inputs","ɵɵInputFlags","SignalBased","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","Devicon_Template","rf","ɵɵlistener","Devicon_Template_div_mouseenter_0_listener","set","Devicon_Template_div_mouseleave_0_listener","ɵɵtemplate","Devicon_Conditional_1_Template","ɵɵproperty","ɵɵconditional","Devicon_contFlowTmp","encapsulation","changeDetection"],"sources":["C:\\Users\\Vyankat\\Downloads\\kevinflor.es-master\\kevinflor.es-master\\src\\app\\shared\\components\\devicon\\devicon.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n  computed,\n  inject,\n  input,\n  signal,\n} from '@angular/core';\nimport { devIcon } from '@shared/components/devicon/devicon.data';\nimport { PlatformCheckService } from '@core/services/platform-check.service';\nimport { DarkModeService } from '@core/services/dark-mode.service';\nimport { TooltipDirective } from '@shared/components/tooltip/tooltip.directive';\nimport { ThemeColor } from '@shared/components/devicon/devicon.schema'\nimport { TechToolName } from \"@data/schema/tech-tool-name.schema\";\n@Component({\n  selector: 'devicon',\n  imports: [TooltipDirective],\n  encapsulation: ViewEncapsulation.None,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n  <div\n    [tooltip]=\"name()\"\n    (mouseenter)=\"isHovered.set(true)\"\n    (mouseleave)=\"isHovered.set(false)\"\n    class=\"bg-transparent dark:text-white text-gray-600 rounded-full inline-flex items-center transition ease-in-out delay-0 hover:scale-[1.1]\"\n  >\n    @if(icon(); as icon){\n    <svg [attr.viewBox]=\"icon.viewBox\" [class]=\"cssClass()\">\n      @for(lgData of icon.linearGradient; track lgData.id){\n      <linearGradient\n        [attr.id]=\"lgData.id\"\n        [attr.x1]=\"lgData.x1\"\n        [attr.y1]=\"lgData.y1\"\n        [attr.x2]=\"lgData.x2\"\n        [attr.y2]=\"lgData.y1\"\n        [attr.gradientUnits]=\"lgData.gradientUnits\"\n      >\n        @for(stop of lgData.stop; track $index){\n        <stop\n          [attr.offset]=\"stop.offset\"\n          [attr.stop-color]=\"stop.stopColor\"\n          [attr.stop-opacity]=\"stop.stopOpacity\"\n        />\n        }\n      </linearGradient>\n      }\n      @for(ellipseData of icon.ellipse; track $index){\n      <ellipse\n        [attr.cx]=\"ellipseData.cx\"\n        [attr.cy]=\"ellipseData.cy\"\n        [attr.rx]=\"ellipseData.rx\"\n        [attr.ry]=\"ellipseData.ry\"\n        [attr.fill]=\"elementColor(ellipseData)\"\n      />\n      } @for(polygonData of icon.polygon; track $index){\n      <polygon\n        [attr.points]=\"polygonData.points\"\n        [attr.fill]=\"elementColor(polygonData)\"\n      ></polygon>\n      } @for(circleData of icon.circle; track $index){\n      <circle\n        [attr.cx]=\"circleData.cx\"\n        [attr.cy]=\"circleData.cy\"\n        [attr.r]=\"circleData.r\"\n        [attr.fill]=\"elementColor(circleData)\"\n      ></circle>\n      } @for(pathData of icon.path; track $index){\n      <path\n        fill-rule=\"evenodd\"\n        [attr.d]=\"pathData.data\"\n        [attr.fill]=\"elementColor(pathData)\"\n      />\n      }\n    </svg>\n    }\n  </div> `\n})\nexport class Devicon {\n  name = input<TechToolName>('HTML');\n  key = input<number>();\n  cssClass = input<string>('w-8');\n  colored = input<boolean>(false);\n  icon = computed(() => devIcon[this.name()]);\n  isHovered = signal<boolean>(false);\n  platformCheck = inject(PlatformCheckService);\n  darkModeService = inject(DarkModeService);\n\n  elementColor(data: ThemeColor & { fill: string }): string{\n    return this.colored() ?  data.fill : this.fillColor(data);\n  }\n\n  fillColor(data: ThemeColor & { fill: string }): string{\n   return this.isHovered() ? data.fill : this.darkLight(data)\n  }\n  darkLight(data: ThemeColor): string {\n    return this.darkModeService.isDark() ? data.dark : data.light;\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}