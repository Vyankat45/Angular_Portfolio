{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DateAgoPipe {\n  transform(value, args) {\n    if (value) {\n      const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n      if (seconds < 29)\n        // less than 30 seconds ago will show as 'Just now'\n        return 'Just now';\n      const intervals = {\n        'year': 31536000,\n        'month': 2592000,\n        'week': 604800,\n        'day': 86400,\n        'hour': 3600,\n        'minute': 60,\n        'second': 1\n      };\n      let counter;\n      for (const i in intervals) {\n        counter = Math.floor(seconds / intervals[i]);\n        if (counter > 0) if (counter === 1) {\n          return counter + ' ' + i + ' ago'; // singular (1 day ago)\n        } else {\n          return counter + ' ' + i + 's ago'; // plural (2 days ago)\n        }\n      }\n    }\n    return value;\n  }\n  static #_ = this.ɵfac = function DateAgoPipe_Factory(t) {\n    return new (t || DateAgoPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"dateAgo\",\n    type: DateAgoPipe,\n    pure: true,\n    standalone: true\n  });\n}","map":{"version":3,"names":["DateAgoPipe","transform","value","args","seconds","Math","floor","Date","intervals","counter","i","_","_2","pure","standalone"],"sources":["C:\\Users\\Vyankat\\Downloads\\kevinflor.es-master\\kevinflor.es-master\\src\\app\\core\\pipe\\date-ago.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n  name: 'dateAgo',\n  pure: true,\n  standalone: true\n})\nexport class DateAgoPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n      if (value) {\n          const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n          if (seconds < 29) // less than 30 seconds ago will show as 'Just now'\n              return 'Just now';\n          const intervals: { [key: string]: number } = {\n              'year': 31536000,\n              'month': 2592000,\n              'week': 604800,\n              'day': 86400,\n              'hour': 3600,\n              'minute': 60,\n              'second': 1\n          };\n          let counter;\n          for (const i in intervals) {\n              counter = Math.floor(seconds / intervals[i]);\n              if (counter > 0)\n                  if (counter === 1) {\n                      return counter + ' ' + i + ' ago'; // singular (1 day ago)\n                  } else {\n                      return counter + ' ' + i + 's ago'; // plural (2 days ago)\n                  }\n          }\n      }\n      return value;\n  }\n\n}\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EACtBC,SAASA,CAACC,KAAU,EAAEC,IAAU;IAC5B,IAAID,KAAK,EAAE;MACP,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,IAAIC,IAAI,EAAE,GAAG,CAAC,IAAIA,IAAI,CAACL,KAAK,CAAC,IAAI,IAAI,CAAC;MACnE,IAAIE,OAAO,GAAG,EAAE;QAAE;QACd,OAAO,UAAU;MACrB,MAAMI,SAAS,GAA8B;QACzC,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,OAAO;QAChB,MAAM,EAAE,MAAM;QACd,KAAK,EAAE,KAAK;QACZ,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,EAAE;QACZ,QAAQ,EAAE;OACb;MACD,IAAIC,OAAO;MACX,KAAK,MAAMC,CAAC,IAAIF,SAAS,EAAE;QACvBC,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAACF,OAAO,GAAGI,SAAS,CAACE,CAAC,CAAC,CAAC;QAC5C,IAAID,OAAO,GAAG,CAAC,EACX,IAAIA,OAAO,KAAK,CAAC,EAAE;UACf,OAAOA,OAAO,GAAG,GAAG,GAAGC,CAAC,GAAG,MAAM,CAAC,CAAC;SACtC,MAAM;UACH,OAAOD,OAAO,GAAG,GAAG,GAAGC,CAAC,GAAG,OAAO,CAAC,CAAC;;;;IAIpD,OAAOR,KAAK;EAChB;EAAC,QAAAS,CAAA,G;qBA3BUX,WAAW;EAAA;EAAA,QAAAY,EAAA,G;;UAAXZ,WAAW;IAAAa,IAAA;IAAAC,UAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}